/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 * Description: ps channel header file
 * Author: yaohenglong
 * Create: 2020-06-16
 */
#ifndef __SUB_CMD_H__
#define __SUB_CMD_H__

typedef enum {
	SUB_CMD_NULL_REQ = 0x0,
	SUB_CMD_SELFCALI_REQ = 0x01,
	SUB_CMD_SET_PARAMET_REQ,
	SUB_CMD_SET_OFFSET_REQ,
	SUB_CMD_SELFTEST_REQ,
	SUB_CMD_CALIBRATE_DATA_REQ,
	SUB_CMD_SET_SLAVE_ADDR_REQ,
	SUB_CMD_SET_RESET_PARAM_REQ,
	SUB_CMD_ADDITIONAL_INFO,
	SUB_CMD_FW_DLOAD_REQ,
	SUB_CMD_FLUSH_REQ,
	SUB_CMD_SET_ADD_DATA_REQ, /* 11 */
	SUB_CMD_SET_DATA_TYPE_REQ, /* 12 */
	SUB_CMD_SET_DATA_MODE = 0x0d, /* 13 */
	SUB_CMD_SET_TP_COORDINATE, /* 14 */
	SUB_CMD_SET_WRITE_NV_ATTER_SALE = SUB_CMD_SET_TP_COORDINATE,

	/* als */
	SUB_CMD_SET_ALS_PA = 0x20,
	SUB_CMD_UPDATE_BL_LEVEL,
	SUB_CMD_UPDATE_RGB_DATA,
	SUB_CMD_GET_FACTORY_PARA,
	SUB_CMD_CHANGE_DC_STATUS,
	SUB_CMD_CHANGE_ALWAYS_ON_STATUS,
	SUB_CMD_UPDATE_NOISE_DATA,
	SUB_CMD_ALS_LCD_FREQ_REQ,

	/* temperature measurement */
	SUB_CMD_THERM_START_MEASURE = 0x20,
	SUB_CMD_THERM_SET_CALIBRATE_THRESHHOLD = 0x21,
	SUB_CMD_THERM_WRITE_HAHB = 0x22,
	SUB_CMD_THERM_BLACKBODY_MEASURE = 0x23,

	/* motion */
	SUB_CMD_MOTION_ATTR_ENABLE_REQ = 0x20,
	SUB_CMD_MOTION_ATTR_DISABLE_REQ,
	SUB_CMD_MOTION_REPORT_REQ,
	SUB_CMD_MOTION_HORIZONTAL_PICKUP_REQ = 0x23,
	/* fingerprint */
	SUB_CMD_FINGERPRINT_OPEN_REQ = 0x20,
	SUB_CMD_FINGERPRINT_CLOSE_REQ,
	SUB_CMD_FINGERPRINT_CONFIG_SENSOR_DATA_REQ,
	SUB_CMD_FINGERPRINT_CONFIG_DEBUG_EVENT_REQ,
	/* acc gyro */
	SUB_CMD_GYRO_OIS_REQ = 0x20,
	SUB_CMD_GYRO_TMP_OFFSET_REQ,
	SUB_CMD_ACC_FILTER_REQ = 0x30,
	/* mag */
	SUB_CMD_MAG_FAR_SOFTIRON = 0x40,
	/* finger sense */
	SUB_CMD_ACCEL_FINGERSENSE_ENABLE_REQ = 0x20,
	SUB_CMD_ACCEL_FINGERSENSE_CLOSE_REQ,
	SUB_CMD_ACCEL_FINGERSENSE_REQ_DATA_REQ,
	SUB_CMD_ACCEL_FINGERSENSE_DATA_REPORT,
	SUB_CMD_TOUCH_FINGERSENSE_MAIN_SCREEN,
	SUB_CMD_TOUCH_FINGERSENSE_ASSIT_SCREEN,

	/* tag pdr */
	SUB_CMD_FLP_PDR_START_REQ = 0x20,
	SUB_CMD_FLP_PDR_STOP_REQ,
	SUB_CMD_FLP_PDR_WRITE_REQ,
	SUB_CMD_FLP_PDR_UPDATE_REQ,
	SUB_CMD_FLP_PDR_FLUSH_REQ,
	SUB_CMD_FLP_PDR_UNRELIABLE_REQ,
	SUB_CMD_FLP_PDR_STEPCFG_REQ,

	/* tag ar */
	SUB_CMD_FLP_AR_START_REQ = 0x20,
	SUB_CMD_FLP_AR_CONFIG_REQ,
	SUB_CMD_FLP_AR_STOP_REQ,
	SUB_CMD_FLP_AR_UPDATE_REQ,
	SUB_CMD_FLP_AR_FLUSH_REQ,
	SUB_CMD_FLP_AR_GET_STATE_REQ,
	SUB_CMD_FLP_AR_SHMEM_STATE_REQ,
	SUB_CMD_CELL_INFO_DATA_REQ = 0x29,

	/* tag environment */
	SUB_CMD_ENVIRONMENT_INIT_REQ = 0x20,
	SUB_CMD_ENVIRONMENT_ENABLE_REQ,
	SUB_CMD_ENVIRONMENT_DISABLE_REQ,
	SUB_CMD_ENVIRONMENT_EXIT_REQ,
	SUB_CMD_ENVIRONMENT_DATABASE_REQ,
	SUB_CMD_ENVIRONMENT_GET_STATE_REQ,

	/* tag flp */
	SUB_CMD_FLP_START_BATCHING_REQ = 0x20,
	SUB_CMD_FLP_STOP_BATCHING_REQ,
	SUB_CMD_FLP_UPDATE_BATCHING_REQ,
	SUB_CMD_FLP_GET_BATCHED_LOCATION_REQ,
	SUB_CMD_FLP_FLUSH_LOCATION_REQ,
	SUB_CMD_FLP_INJECT_LOCATION_REQ,
	SUB_CMD_FLP_RESET_REQ,
	SUB_CMD_FLP_RESET_RESP,
	SUB_CMD_FLP_GET_BATCH_SIZE_REQ,
	SUB_CMD_FLP_BATCH_PUSH_GNSS_REQ,

	SUB_CMD_FLP_ADD_GEOF_REQ,
	SUB_CMD_FLP_REMOVE_GEOF_REQ,
	SUB_CMD_FLP_MODIFY_GEOF_REQ,
	SUB_CMD_FLP_LOCATION_UPDATE_REQ,
	SUB_CMD_FLP_GEOF_TRANSITION_REQ,
	SUB_CMD_FLP_GEOF_MONITOR_STATUS_REQ,

	SUB_CMD_FLP_GEOF_GET_TRANSITION_REQ,

	SUB_CMD_FLP_CELLFENCE_ADD_REQ,
	SUB_CMD_FLP_CELLFENCE_OPT_REQ,
	SUB_CMD_FLP_CELLFENCE_TRANSITION_REQ,
	SUB_CMD_FLP_CELLFENCE_INJECT_RESULT_REQ,

	SUB_CMD_FLP_CELLTRAJECTORY_CFG_REQ,
	SUB_CMD_FLP_CELLTRAJECTORY_REQUEST_REQ,
	SUB_CMD_FLP_CELLTRAJECTORY_REPORT_REQ,
	SUB_CMD_FLP_CELLDB_LOCATION_REPORT_REQ,

	SUB_CMD_FLP_COMMON_STOP_SERVICE_REQ,
	SUB_CMD_FLP_COMMON_WIFI_CFG_REQ,

	SUB_CMD_FLP_GEOF_GET_LOCATION_REQ,
	SUB_CMD_FLP_GEOF_GET_LOCATION_REPORT_REQ,
	SUB_CMD_FLP_ADD_WIFENCE_REQ,
	SUB_CMD_FLP_REMOVE_WIFENCE_REQ,
	SUB_CMD_FLP_PAUSE_WIFENCE_REQ,
	SUB_CMD_FLP_RESUME_WIFENCE_REQ,
	SUB_CMD_FLP_GET_WIFENCE_STATUS_REQ,
	SUB_CMD_FLP_WIFENCE_TRANSITION_REQ,
	SUB_CMD_FLP_WIFENCE_STATUS_REQ,
	SUB_CMD_FLP_COMMON_DEBUG_CONFIG_REQ,

	SUB_CMD_FLP_CELL_CELLBATCHING_CFG_REQ,
	SUB_CMD_FLP_CELL_CELLBATCHING_REQ,
	SUB_CMD_FLP_CELL_CELLBATCHING_REPORT_REQ,
	SUB_CMD_FLP_DIAG_SEND_CMD_REQ,
	SUB_CMD_FLP_DIAG_DATA_REPORT_REQ,
	SUB_CMD_FLP_BATCHING_MULT_LASTLOCATION_REQ,
	SUB_CMD_FLP_BATCHING_MULT_FLUSH_REQ,

	SUB_CMD_FLP_GEOF_GET_SIZE_REQ,
	SUB_CMD_FLP_GEOF_GET_SIZE_REPORT_REQ,
	SUB_CMD_FLP_CELLFENCE_GET_SIZE_REQ,
	SUB_CMD_FLP_CELLFENCE_GET_SIZE_REPORT_REQ,
	SUB_CMD_FLP_WIFENCE_GET_SIZE_REQ,
	SUB_CMD_FLP_WIFENCE_GET_SIZE_REPORT_REQ,

	/* Always On Display */
	SUB_CMD_AOD_START_REQ = 0x20,
	SUB_CMD_AOD_STOP_REQ,
	SUB_CMD_AOD_START_UPDATING_REQ,
	SUB_CMD_AOD_END_UPDATING_REQ,
	SUB_CMD_AOD_SET_TIME_REQ,
	SUB_CMD_AOD_SET_DISPLAY_SPACE_REQ,
	SUB_CMD_AOD_SETUP_REQ,
	SUB_CMD_AOD_DSS_ON_REQ,
	SUB_CMD_AOD_DSS_OFF_REQ,
	SUB_CMD_AOD_SET_GMP,
	SUB_CMD_AOD_SET_LAYER_DATA,
	SUB_CMD_AOD_SET_FB_LIST,
	SUB_CMD_AOD_UPDATE_VOL,
	SUB_CMD_AOD_UPDATE_DATA_REGION,
	SUB_CMD_AOD_CONFIG_INFO,
	SUB_CMD_AOD_SET_FOLD_INFO_REQ,
	SUB_CMD_AOD_MAX,
	/* key */
	SUB_CMD_BACKLIGHT_REQ = 0x20,
	/* rpc */
	SUB_CMD_RPC_START_REQ = 0x20,
	SUB_CMD_RPC_STOP_REQ,
	SUB_CMD_RPC_UPDATE_REQ,
	SUB_CMD_RPC_LIBHAND_REQ,

	SUB_CMD_VIBRATOR_SINGLE_REQ = 0x20,
	SUB_CMD_VIBRATOR_REPEAT_REQ,
	SUB_CMD_VIBRATOR_ON_REQ,
	SUB_CMD_VIBRATOR_SET_AMPLITUDE_REQ,
	SUB_CMD_VIBRATOR_GEN_WAVE_TONE,
	SUB_CMD_VIBRATOR_PROBE,

	/* swing */
	SUB_CMD_SWING_LOAD_MODEL = 0x20,
	SUB_CMD_SWING_UNLOAD_MODEL,
	SUB_CMD_SWING_RUN_MODEL,
	SUB_CMD_SWING_GET_INFO,
	SUB_CMD_SWING_LIST_MODELS,
	SUB_CMD_SWING_DBG_ISR,
	SUB_CMD_SWING_FUSION_EN,
	SUB_CMD_SWING_FUSION_SET,
	SUB_CMD_SWING_FUSION_UPLOAD,
	SUB_CMD_SWING_FUSION_GETS,
	SUB_CMD_SWING_FUSION_SETS,
	SUB_CMD_SWING_SYSCACHE_DISABLE,
	SUB_CMD_SWING_SYSCACHE_ENABLE,
	SUB_CMD_SWING_SCREEN_ON,
	SUB_CMD_SWING_SCREEN_OFF,
	SUB_CMD_SWING_GET_WAKEUP_LOCK,
	SUB_CMD_SWING_RELEASE_WAKEUP_LOCK,

	/* swing cam */
	SUB_CMD_SWING_CAM_CONFIG = 0x20,
	SUB_CMD_SWING_CAM_CAPTURE,
	SUB_CMD_SWING_CAM_MATCH_ID,
	SUB_CMD_SWING_CAM_ACQUIRE,
	SUB_CMD_SWING_CAM_EXTEND,
	SUB_CMD_SWING_GET_OTP,

	/* swing debug */
	SUB_CMD_SWING_DBG_SET_BKPT = 0x20,
	SUB_CMD_SWING_DBG_RM_BKPT,
	SUB_CMD_SWING_DBG_SINGLE_STEP,
	SUB_CMD_SWING_DBG_SUSPEND,
	SUB_CMD_SWING_DBG_RESUME,
	SUB_CMD_SWING_DBG_READ,
	SUB_CMD_SWING_DBG_WRITE,
	SUB_CMD_SWING_DBG_SHOW_BKPTS,
	SUB_CMD_SWING_DBG_DUMP,
	SUB_CMD_SWING_DBG_MODEL,
	SUB_CMD_SWING_DBG_LIST_TASKS,
	SUB_CMD_SWING_DBG_RUN_BLAS,
	SUB_CMD_SWING_DBG_PROFILE_CONFIG = 0x2c,
	SUB_CMD_SWING_DBG_PROFILE_PMU_DATA = 0x2d,
	SUB_CMD_SWING_DBG_DBG_ISR,

	/* KB */
	SUB_CMD_KB_OPEN_REQ = 0x20,
	SUB_CMD_KB_OPEN_RESP,
	SUB_CMD_KB_CLOSE_REQ,
	SUB_CMD_KB_CLOSE_RESP,
	SUB_CMD_KB_REPORT_REQ,
	SUB_CMD_KB_REPORT_RESP,
	SUB_CMD_KB_EVENT_REQ,
	SUB_CMD_KB_EVENT_RESP,
	SUB_CMD_KB_HUB_MCU_READY,
	SUB_CMD_KB_SEND_DATA,

	/* screen status send to sensorhub */
	SUB_CMD_SCREEN_STATUS = 0x20,

	/* thp */
	SUB_CMD_THP_OPEN_REQ = 0x20,
	SUB_CMD_THP_CLOSE_REQ,
	SUB_CMD_THP_DEBUG_REQ,
	SUB_CMD_THP_CONFIG_REQ,
	SUB_CMD_THP_STATUS_REQ,
	SUB_CMD_TSA_EVENT_REQ,

	/* ps */
	SUB_CMD_PS_RCV_STATUS_REQ = 0x20,
	SUB_CMD_PS_LCD_FREQ_REQ,
	SUB_CMD_PS_TANS_AOD_REQ,

	/* swing tof */
	SUB_CMD_SWING_TOF_MACTH_ID = 0x20,
	SUB_CMD_SWING_TOF_ACQUIRE,
	SUB_CMD_SWING_TOF_REQ_POWER_ON_OFF,
	SUB_CMD_SWING_TOF_SET_POWER_ON_OFF_RESULT,
	SUB_CMD_SWING_TOF_REQ_POWER_ON_OFF_TEST,

	SUB_CMD_MAX = 0xff,
} obj_sub_cmd_t;
#endif
